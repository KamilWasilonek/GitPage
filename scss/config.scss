$primary-color: #444;
$secondary-color: #FFD20D;
$background-img: url('../img/showcaseBackground.jpeg');
$background-opacity: 0.8;
$portrait-opacity: 0.6;
$menuNav-opacity: 0.9;

$breakpoints: ( 
    'mediaSm': ( min-width: 480px),
    'mediaMd': ( min-width: 768px),
    'mediaLg': ( min-width: 992px),
    'mediaXl': ( min-width: 1200px)
);

@mixin ease-out($time: 1.0) {
    transition: all #{$time}s ease-out;
}

@mixin ease-in-out($time: 1.0) {
    transition: all #{$time}s ease-in-out;
}

@mixin background($x:0,
$y:0) {
    &.bg-img {
        background: $background-img no-repeat #{$x} #{$y};
        background-size: cover;
        background-attachment: fixed;
        &:after {
            content: "";
            width: 100%;
            height: 100%;
            position: absolute;
            top: 0;
            left: 0;
            z-index: -1;
            background: rgba($primary-color, $background-opacity);
        }
    }
}

@mixin respond-to($name) {
    @if map-has-key($breakpoints,
    $name) {
        @media #{inspect(map-get($breakpoints, $name))} {
            @content;
        }
    }
    @else {
        @warn "Unfortunately, no value could be retrieved from `#{$breakpoint}`. "+"Please make sure it is defined in `$breakpoints` map.";
    }
}

@mixin cssLock($min-size: 10, $max-size: 14, $min-width: 300, $max-width: 1200, $property:font-size, $unit: px) {
    #{$property}: calc(#{$min-size}#{$unit} + (#{$max-size} - #{$min-size}) * ((100vw - #{$min-width}#{$unit}) / (#{$max-width} - #{$min-width})));
}

@mixin lgHeading{
    @include cssLock(45, 65);
    text-align: center;
    .text-secondary {
        color: $secondary-color;
    }
}